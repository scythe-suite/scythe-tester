#!/bin/bash -e

echocol() { echo -e "\033[31m$@...\033[0m " >&2; }

if [ -z "$2" ]; then
    exec >/dev/null
fi

echocol "Setup dirs"

tempdir=$(mktemp -d /tmp/sf-XXXXXXXXX) || exit 1

mkdir -p $tempdir/dist
rm -rf ./release
mkdir -p ./release
mkdir -p ./vendor

echocol "Vendorizing [begin]"

if [ ! -r ./vendor/redis ]; then
    echocol "Getting redis"
    curl -sL https://github.com/andymccurdy/redis-py/tarball/2.10.6 | tar -C ./vendor --strip 1 --wildcards -zxvf - '*/redis'
fi
if [ ! -d ./vendor/flask ]; then
	echocol "Getting flask"
	curl -sL https://github.com/pallets/flask/tarball/0.12.2 | tar -C ./vendor --strip 1 --wildcards -zxvf - '*/flask'
fi
if [ ! -d ./vendor/jinja2 ]; then
	echocol "Getting jinja2"
	curl -sL https://github.com/pallets/jinja/tarball/2.9.6 | tar -C ./vendor --strip 1 --wildcards -zxvf - '*/jinja2'
    rm -f ./vendor/jinja2/async{support,filters}.py
fi
if [ ! -d ./vendor/werkzeug ]; then
	echocol "Getting werkzeug"
	curl -sL https://github.com/pallets/werkzeug/tarball/0.12.2 | tar -C ./vendor --strip 1 --exclude 'docs' --wildcards -zxvf - '*/werkzeug'
fi
if [ ! -d ./vendor/markupsafe ]; then
	echocol "Getting markupsafe"
	curl -sL https://github.com/pallets/markupsafe/tarball/1.0 | tar -C ./vendor --strip 1 --wildcards -zxvf - '*/markupsafe'
fi
if [ ! -r ./vendor/itsdangerous.py ]; then
	echocol "Getting itsdangerous"
	curl -sL https://github.com/pallets/itsdangerous/tarball/0.24 | tar -C ./vendor --strip 1 --wildcards -zxvf - '*/itsdangerous.py'
fi
if [ ! -d ./vendor/click ]; then
	echocol "Getting click"
	curl -sL https://github.com/pallets/click/tarball/6.7 | tar -C ./vendor --strip 1 --wildcards -zxvf - '*/click'
fi
if [ ! -d ./vendor/flask_restful ]; then
	echocol "Getting flask_restful"
    curl -sL https://github.com/flask-restful/flask-restful/tarball/0.3.6 | tar -C ./vendor --strip 1 --wildcards -zxvf - '*/flask_restful'
fi
echocol "Vendorizing [end]"

echocol "Copying source files to dist"

cp -rv ./src/{st,__main__.py} $tempdir/dist
cp -rv ./vendor/* $tempdir/dist

echocol "Compiling and removing source files"

( cd $tempdir/dist; python -m compileall . )
find $tempdir/dist -name \*.py -exec rm {} \;

echocol "Preparing zip file"

rm -f $(pwd)/release/st
( cd $tempdir/dist;  zip -9r $tempdir/st.zip . )
echo '#!/usr/bin/env python2' > $(pwd)/release/st
cat $tempdir/st.zip >> $(pwd)/release/st
chmod u+rx $(pwd)/release/st

rm -rf $tempdir

echocol "Built version is"

./release/st version
